version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10.12

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - ~/.mongodb-binaries
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: npm run lint
      - run: npm test
      - run: npm run coverage

  staging:
    docker:
      - image: circleci/node:10.12

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - nowcli-11.4.1

      - run: sudo npm i -g now@11.4.1 --unsafe-perm

      - save_cache:
          paths:
            - /usr/local/lib/node_modules
          key: nowcli-11.4.1

      - run: now -t ${NOW_TOKEN} remove ireversi-server -y || true
      - run: now -t ${NOW_TOKEN} --public --no-verify -e MONGO_URI=@ireversi-mongo-uri -n ireversi-server
      - run: now -t ${NOW_TOKEN} alias
      - run: now -t ${NOW_TOKEN} scale ireversi-server.now.sh 1

  deploy:
    docker:
      - image: circleci/python:3.6.4

    working_directory: ~/repo

    steps:
      - run: sudo pip install awscli
      - run: aws deploy create-deployment --application-name $AWS_APP_NAME --deployment-group-name $AWS_GROUP_NAME --github-location repository="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME",commitId="$CIRCLE_SHA1"

workflows:
  version: 2
  test_and_staging:
    jobs:
      - test
      - staging:
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
